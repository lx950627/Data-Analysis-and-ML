d=3
d
Rserve(args='--vanilla')
Rserve()
library(Rserve)
Rserve(args='--vanilla')
a
a=4
a
x-c(1,2,3,4,5)
x<-c(1,2,3,4,5)
y<-c(4,6,7,9,11)
lowess(x,y)
women
fit<-lm(weight~height,data=women)
summary(fit)
coefficients(fit)
confint(fit)
residuals(fit)
anova(fit)
plot(fit)
AIC(fit)
predict(fit)
new<-data.frame(height=73)
predict(lm.sol,new,interval="prediction",level=0.95)
predict(fit,new,interval="prediction",level=0.95)
predict(fit,new,interval="confidence",level=0.95)
women$height
women$weight
dim(women)
women
plot(women$height,women$weight.xlab="Height(in inches)",ylab="Weight(in pounds)")
plot(women$height,women$weight,xlab="Height(in inches)",ylab="Weight(in pounds)")
abline(fit)
plot(women$height,women$weight,xlab="Height(in inches)",ylab="Weight(in pounds)")
abline(fit)
x<-c(2,3)
y<-c(10,13)
m<-lm(y~x)
summary(m)
x<-c(2,3,4)
y<-c(10,13,14)
m<-lm(y~x)
summary(m)
x<c(7,8,9)
x
y
x
x-c(7,8,9)
x
x<-c(7,8,9)
x
y<-c(13,14,15.6)
y
m<-lm(y~x)
newx<-data.frame(x=10)
newx
predict(fit,newx,interval="prediction",level=0.95)
predict(m,newx,interval="prediction",level=0.95)
predict(m,newx,interval="prediction",level=0.20)
install.packages("Cairo")
suppressWarnings(require('Cairo',quietly=TRUE))
data(iris)
attach(iris)
plot(Sepal.Length,Petal.Length,col=unclass(Species))
dev.off()
data(iris)
plot(Sepal.Length,Petal.Length,col=unclass(Species))
x<c(1,2,3)
x<-c(1,2,3)
x
y<-c(2,4,6)
plot(x,y)
plot(x,y,xlab=p,ylab=q)
plot(x,y,xlab="p",ylab="q")
demo()
demo(image)
q()
?im
?lm
example(lm)
x<-c(0,1,2)
x
y<-c(0,2,4)
t<-lm(y~x)
t
t<-data.frame(x="3")
t
t<-lm(y~x)
t
n<-data.frame(x="3")
n
predict(t,n,interval="prediction",level=0.95)
n<-data.frame(x=3)
predict(t,n,interval="prediction",level=0.95)
rnorm(10)
rnorm(1)
rnorm(1,sd=0.5)
rnorm(1)
load()
load(.Rdata)
load(".Rdata")
data<-c(14,14,15,15,16,17)
data
plot(data)
pwd
pws
getwd()
x=read.table(file.choose())
x
range(2)
range(2,5)
citation()
help()
r
a
b
c
d
e
r
pow(2,3)
seq(2,10)
m<-cbind(1,1:7)
m
m<-cbind(m,8:14)[,c(1,3,2)]
m
c(1,3,2)
Reduce(function(y,w) w(y),c(function(x) x+1,function(x) x*x,function(x) g(x)/2),A)
A=1
Reduce(function(y,w) w(y),c(function(x) x+1,function(x) x*x,function(x) g(x)/2),A)
g=function(){}
g=function(x){return x}
g<-function(x){return(x);}
g(2)
Reduce(function(y,w) w(y),c(function(x) x+1,function(x) x*x,function(x) g(x)/2),A)
V-c(1,2,3,4,5,0)
V<-c(1,2,3,4,5,0)
V
V[which.min(lapply(V,function(x) x^3))]
V[which.min(sapply(V,function(x) x^3))]
V[which.min(unlist(lapply(V,function(x) x)))]
lapply(c(1,-2,3),abs)
sapply(c(1,-2,3),abs)
a<-c(1 4 6,1 5 2)
a<-c(1 4 61 5 2)
a<-c(1,4,61,5,2)
a<-c(1,4,61,5,2;2,4,6,3,2)
a
a[2]
a[0]
type(a)
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))#
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
install.packages("igraph", type="binary")
library(igraph)
p <- 0.1 #
# create random graph#
g1 <- barabasi.game(100, directed=F)#
g2 <- erdos.renyi.game(100, p, directed=F)#
# create random graph with given degree distribution#
g3 <- degree.sequence.game(rep(2,100))#
degree(g)
degree(g1)
plot(g1,vertex.size=8, vertex.label.cex=0.7)
library(igraph)
g1 <- barabasi.game(100, directed=F)
g1
plot(g1,vertex.size=8, vertex.label.cex=0.7)
a<-(1,2,3,4,5,6,7,8)
a<-x(1,2,3,4,5,6,7,8)
a<-c(1,2,3,4,5,6,7,8)
a[1:5]
c(1)
1
a[2:5]
members<-c(1,5,7,9,12)
score<-(94,98,70,92,95)
score<-c(94,98,70,92,95)
df<-data.frame(members,score)
df
df_sorted<-df[order(-score),]
df_sorted
x = [3 4 , 1 2]
x
x<-c(3 4,1 2)
x
x<-matrix(c(3,4,1,2),nrow=2,ncol=2)
x
x<-t(x)
x
y<-c(1,3)
x*y
x
y
x %*% y
X_train<-read.csv("Q1.training.geno")
X_train
X_train<-read.table("Q1.training.geno")
X_train
read.fwf("Q1.training.geno", widths = c(1,2,3))
read.fwf("Q1.training.geno", widths = seq(1,900)))
read.fwf("Q1.training.geno", widths = seq(1,900))
read.fwf("Q1.training.geno", widths = c(1,1,1,))
read.fwf("Q1.training.geno", widths = c(1,1,1,))
read.fwf("Q1.training.geno", widths = c(1,1,1,1))
seq(1,10)
req(1,100)
rep(1,10000)
c(1,2)*4
read.fwf("Q1.training.geno", widths = rep(1,900))
X_train<-read.fwf("Q1.training.geno", widths = rep(1,900))
dim(X_train)
tail(X_train)
X<-t(X_train)
X_train<-t(X_train)
X_train
tail(X_train)
class(X_train)
y_train<-read.table("Q1.training.pheno")
y_train
class(y_train)
y <- mtcars$hp
y
x <- mtcars %>% select(mpg, wt, drat) %>% data.matrix()
library(tidyverse)#
library(broom)#
library(glmnet)
10^seq(3, -2, by = -.1)
seq(3, -2, by = -.1)
X_train<-t(read.fwf("Q1.training.geno", widths = 1))
X_train
X_train<-data.frame(t(read.fwf("Q1.training.geno", widths = 1)))
X_train
head(X_train)
X_train<-unlist(read.fwf("Q1.training.geno", widths = 1))
X_train
dim(X_train)
install.packages(glmnet)
install.packages("glmnet")
X_train<-t(read.fwf("Q1.training.geno", widths = rep(1,900)))#
y_train<-read.table("Q1.training.pheno")
X_train
dim(X_train)
fit <- glmnet(X_train, y_train, alpha = 0, lambda = 2)
library(glmnet)
library("glmnet")
library(glmnet)
install.packages("glmnet")
library("glmnet")
install.packages("glmnet", dependencies=TRUE)
library("glmnet")
installed.packages()
install.packages("glmnet", repos = "http://cran.us.r-project.org")
library(glmnet)
library("glmnet")
install.packages("glmnet", dependencies=TRUE)
install.packages("glmnet", dependencies=TRUE)
install.packages("glmnet")
